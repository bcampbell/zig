#include "resources.h"
#include "util.h"	// for JoinPath()
#include "log.h"

// Handling for data file locations on various platforms/packaging systems,
// as the location of the data files is platform dependent.
//
// unix: assumes data dir is in current dir.
//       TODO: override to allow proper installation!
//
// osx: the data dir should be included inside the app bundle.
//
// windows: the data directory should be in the same dir
//  as the exe (which is generally the current directory when the game is
//  run).
//
//

//static
std::string Resources::s_ResourcePath;


std::string Resources::Map( std::string const& name )
{
	return JoinPath( s_ResourcePath, name );
}



#if defined( __APPLE__ ) && defined( __MACH__ )

#include <sys/syslimits.h>  // for PATH_MAX
#include "osx_glue.h"

void Resources::Init()
{
    char buf[PATH_MAX];
    if( osx_get_resource_path(buf,PATH_MAX) )
    {
        s_ResourcePath = JoinPath(buf,"data");
        log_infof("data: %s\n", s_ResourcePath.c_str());
    }
    else
    {
        log_infof("couldn't get path for data\n");
        // uhoh...
        s_ResourcePath = "./data";
    }
}

#else
// unix and windows - no mucking about.

// DATA_PATH from config.h (generated by cmake)
void Resources::Init()
{
	s_ResourcePath = "./data";  //DATA_PATH;
}

#endif

